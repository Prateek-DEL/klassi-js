#    Klassi Automated Testing Tool
#    Created by Larry Goddard
#
#    Copyright Â© klassitech 2016 - Larry Goddard <larryg@klassitech.co.uk>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
#    Javascript Node CircleCI 2.0 configuration file
#
#    Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2.0

references:
  filter_ignore_wip_branches: &filter_ignore_wip_branches
    filters:
      branches:
        ignore:
          - /[a-z]{2}_wip.*/ # wip branches with initials prefix, e.g. mw_wip
          - /wip\/.*/ # wip branches with wip/ prefix, e.g. wip/foo
          - /poc\/.*/ # poc branches with poc/ prefix, e.g. poc/bar
          - /automation\/.*/ # automation branches with automation/ prefix. e.g. automation/foo

  filter_only_integration_branches: &filter_only_integration_branches
    filters:
      branches:
        only:
          - develop # git flow production branch

  filter_only_releasable_branches: &filter_only_releasable_branches
    filters:
      branches:
        only:
          - master # git flow production branch
          - /hotfix\/.*/ # git flow hotfix branches
          - /release\/.*/ # git flow release branches

jobs:
  ###########################################
  # Acceptance test base configuration      #
  ###########################################
  acceptance_test_base: &acceptance_test_base
    docker:
      - image: circleci/node:12.14.1-browsers
    working_directory: ~/build
    
    steps:
     
          
      - run:
          name: Checkout the klassi-js repo
          
          command: git clone https://github.com/Prateek-DEL/klassi-js.git -b master
     
      - run:
          name: Root directory for repo after clone
          command: ls -la
          
        
      - run:
          name: Change roote directory for repo after clone
          command: cd /klassi-js
          
      - run:
          name: changing and Root directory for repo after clone
          command: ls -la
    

      - run:
          name: Install the klassi framework dependencies
          command: yarn install
          
      - run:
          name: Change roote directory for repo after clone
          command: cd ~/klassi-js/projects/example-test-suite

      - run:
          name: Install the Project dependencies
          path: ~/klassi-js/projects/example-test-suite
          command: yarn install

      # Save yarn cache, don't include node modules because we end up with an
      # archive so large that unarchiving takes longer than the yarn install
      - run:
          name: Root directory content first
          command: ls -la
          
      - run:
          name: Checking directory content
          path: ~/klassi-js/projects/example-test-suite
          command: ls -la
          
      - run:
          name: Root directory content
          command: ls -la
          
      - run:
          name: Run acceptance tests
          path: ~/klassi-js/projects/example-test-suite
          command: yarn run cilb${STAGE} ${BROWSER}

      - store_artifacts:
          path: ~/klassi-js/projects/example-test-suite/artifacts

      - store_test_results:
          command: sleep 2
          path: ~/klassi-js/projects/example-test-suite/reports

  acceptance_test_chrome:
    <<: *acceptance_test_base
    environment: { BROWSER: 'chrome', STAGE: 'uat' }

  acceptance_test_edge:
    <<: *acceptance_test_base
    environment: { BROWSER: 'edge', STAGE: 'uat' }

  acceptance_test_safari:
    <<: *acceptance_test_base
    environment: { BROWSER: 'safari', STAGE: 'uat' }

  acceptance_test_tabletiPad:
    <<: *acceptance_test_base
    environment: { BROWSER: 'tabletiPad', STAGE: 'uat'  }

  acceptance_test_tabletGalaxy:
    <<: *acceptance_test_base
    environment: { BROWSER: 'tabletGalaxy', STAGE: 'uat'  }

  dev_acceptance_test_chrome:
    <<: *acceptance_test_base
    environment: { BROWSER: 'chrome', STAGE: 'dev' }

workflows:
  version: 2
  build_and_test:
    jobs:
      - acceptance_test_chrome:
          <<: *filter_only_releasable_branches

      - acceptance_test_edge:
          <<: *filter_only_releasable_branches

      - acceptance_test_safari:
          <<: *filter_only_releasable_branches

      - acceptance_test_tabletGalaxy:
          <<: *filter_only_releasable_branches

      - acceptance_test_tabletiPad:
          <<: *filter_only_releasable_branches

      - dev_acceptance_test_chrome:
          <<: *filter_only_integration_branches
